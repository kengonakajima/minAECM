## AECM の振幅ベース・エコーパス推定メモ

- `hAdapt16[i]` は FFT 後の周波数ビン i (0..64) を表す。Fs=16kHz, FFT長128のため 125Hz 刻みで 0〜8kHz をカバー。
- 各ビンの値は「その帯域の遠端振幅が近端へどれくらい漏れるか」を Q16.0 で記録した非負ゲイン。値が大きいほどエコーの寄与が強い。
- 係数を配列で保持するのは周波数ごとのエコーパスが異なるため。単一スカラーだと強い帯域に合わせた抑圧で近端まで丸ごと削ってしまい、逆に弱い帯域に合わせればエコーが残る。
- AECM は複素 FIR ではなく周波数ごとの振幅ゲインだけを学習する簡易 NLMS。位相は扱わないので、各ビン独立にゲインを調整して残留エコーを小さくする。
- `UpdateChannel()` で `hAdapt32/16` を更新、`StoreAdaptiveChannelC()` で保存チャネルと比較して良ければ採用。以降 `CalcSuppressionGain()` と NLP が残りの抑圧量 (`H_gain`) を決める。
- 実運用では `[hAdapt]` ログ（10 ブロックごと表示）を見れば、どの帯域でエコーパスが強いかを視覚的に把握できる。




> hAdapt32 は NLMS 更新時の計算精度を確保するための 32 ビット固定小数点（Q16.16 相当）で、hAdapt16 はそこから 16
  ビットに丸めた整数ゲインです。

  流れとしては：

  - UpdateChannel() ではまず hAdapt32[i] を基準に遠端 X_mag と近端 Y_mag から更新量を計算し、32 ビットのまま加算し
  ます。これで細かな学習ステップでも丸め誤差を溜めにくくします。
  - 更新後に g_aecm.hAdapt16[i] = (int16_t)(g_aecm.hAdapt32[i] >> 16); として上位 16 ビットを取り出し、振幅ゲインと
  して使いやすい整数（Q16.0）に整えます。CalcLinearEnergiesC() や StoreAdaptiveChannelC() などはこの 16 ビット版を
  利用します。
  - つまり hAdapt32 が“内部精度保持用の親データ”、hAdapt16 が“実際のエコーパス利得テーブル”という関係です。



▌ なぜ、周波数ビンによって回り込みの強度が大幅に違うのか?どういう物理現象によってそうなるのか。


> いくつかの要因が重なって、周波数ごとに回り込み（エコーパス利得）が大きく変わります：

  - スピーカ／マイクの周波数特性
    それぞれの機器は帯域ごとに出力・感度が異なります。スピーカは低域や高域が落ち込み、中域が強調されることが多く、
  マイクも同様にフラットではありません。そのため特定の帯域で遠端音圧が大きく（あるいは小さく）なり、エコー振幅が変
  動します。
  - 耳や筐体の形状による指向性
    デバイスの配置や筐体によって音が反射・回折しやすい方向が決まり、周波数によって指向性が変化します。特に高域ほど
  波長が短いため、ちょっとした形状の違いで伝搬経路の減衰が大きく変わります。
  - 部屋（や筐体内部）の共鳴・吸音
    部屋のサイズや壁材に応じて特定の周波数で定在波が立ったり吸音されやすかったりします。波長が部屋の寸法と合致する
  帯域は反射が強く、逆に吸音材が効いている帯域はエコーが弱くなります。
  - 経路の多重化
    エコージェネレーターまでの距離が複数あると、到達時間の異なる経路が重なります。周波数によっては干渉が構造的に強
  め合い／打ち消し合いを起こし、結果として利得が上下します。
  - 電気系の影響
    スピーカ駆動回路や ADC/DAC のような電気系にも周波数ごとのゲイン・位相特性があり、これが音響経路と合成されて見か
  けの利得に反映されます。

  これらの要因が重なり、実際のエコーパスは「周波数ごとの複雑なゲイン曲線」になります。そのため AECM は周波数ビンご
  とに独立した係数 (hAdapt16) を学習し、帯域ごとの強弱に合わせてエコーを抑えています。




周波数ゲインだけでかなり消せるのがすごい。なぜそんなにうまくいくんだろう。。

> 周波数ごとの振幅ゲインだけでそこそこ消える理由は、実際に「完全にエコーパスを再現している」わけではなく、以下の条
  件が組み合わさって“使えるレベルまで”持っていっているからです。

  - エネルギー支配の考え方
    遅延をブロック単位でそろえたあと、遠端の振幅スペクトル (|X(k)|) と近端の振幅 (|Y(k)|) を比べると、エコーが支
  配的な帯域では (|Y(k)|) がほぼ遠端に比例します。そこでその帯域のゲインを小さくすれば「エコーっぽいエネルギー」だ
  けを落とせる。位相が多少ズレていても、振幅ベースで遠端エネルギーの多い所を抑えるだけで体感上のエコーはかなり減り
  ます。
  - スピーチの統計的性質
    遠端音声と近端固有音声（近端話者）は相関が低いので、同じ周波数帯で同時に大きくならないことが多い。エコー優勢な
  タイミングでは (|Y(k)|) が遠端由来のエネルギーで占められ、逆に近端話者が発声しているときは (|Y(k)|) が遠端より大
  きくなる（もしくは全く別のスペクトル形状になる）。振幅比だけでもエコー／近端をある程度判別できるので、抑圧ゲイン
  を目安に消しやすい。
  - 残留エコーは NLP やポストフィルタで潰す
    hAdapt16 のみで完璧に消えているわけではなく、最終段の Suppression/NLP (H_gain) が「残ったエネルギーは全部減衰」
  する方向に働く。位相情報を使わないぶん残差は残るが、ヒューリスティックなマスクで目立たないレベルまで削る仕組み
  です。
  - ブロック区間が短い & 遅延調整済み
    64 サンプル（4 ms）程度でオーバーラップさせながら処理するので、遅延が合っていればその区間で位相が大きく回転する
  ことは少なく、あくまで“遠端振幅に応答するフィルタ”というモデルが成り立ちやすい。
  - 人間の聴覚的許容
    完全にエコーを打ち消すのでなくても、遠端に由来する音量が 10 dB 程度落ちれば「エコーがだいぶ減った」と感じられ
  る。位相が合っていなくてもエネルギーが落ちれば知覚されにくい。

  要するに、AECM は「厳密な再現ではなく粗めの振幅マスク＋残差抑圧」の設計なので、周波数ごとのゲイン調整だけでも実用
  レベルに届いているのです。複素 FIR を追い込む AEC3 ほどの精度は出ませんが、軽量でそこそこ効く理由はこのあたりにあ
  ります。

